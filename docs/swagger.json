{
  "swagger": "2.0",
  "info": {
    "title": "Node.js-OKTEN",
    "version": "1.0",
    "description": "Node.js project in OKTEN",
    "contact": {
      "name": "Yana Luchyk",
      "email": "yanaluchyk@gmail.com"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "createUser",
        "description": "How to create user",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "default": "Yana",
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "default": "example@gmail.com",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "default": "12345678Example",
            "type": "string"
          },
          {
            "name": "role",
            "in": "formData",
            "default": "user",
            "type": "string"
          },
          {
            "name": "age",
            "in": "formData",
            "default": 18,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "User was created",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError400"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "getAllUsers",
        "description": "How to get all users",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "default": 1,
            "type": "number"
          },
          {
            "name": "perPage",
            "in": "query",
            "default": 20,
            "type": "number"
          },
          {
            "name": "age.lte",
            "in": "query",
            "default": 100,
            "type": "number"
          },
          {
            "name": "age.gte",
            "in": "query",
            "default": 0,
            "type": "number"
          },
          {
            "name": "name",
            "in": "query",
            "default": "",
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "default": "user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users received",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "617921aa31e95274fda0887d",
                    "description": "MongoDB ID"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "Yana"
                  },
                  "age": {
                    "type": "number",
                    "example": 18
                  },
                  "role": {
                    "type": "string",
                    "example": "user"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError400"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "getOneUser",
        "description": "How to get one user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "default": "617969ed59aa102a23ef0e6f",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User is received",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "617921aa31e95274fda0887d",
                    "description": "MongoDB ID"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "Yana"
                  },
                  "age": {
                    "type": "number",
                    "example": 18
                  },
                  "role": {
                    "type": "string",
                    "example": "user"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError404"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "updateUser",
        "description": "How to update user",
        "parameters": [
          {
            "name": "action_token",
            "in": "header",
            "description": "This is `action_token` of user",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "This is `id` of user",
            "default": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "default": "Yana",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "617921aa31e95274fda0887d",
                    "description": "MongoDB ID"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "Yana"
                  },
                  "age": {
                    "type": "number",
                    "example": 18
                  },
                  "role": {
                    "type": "string",
                    "example": "user"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError401"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError404"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "deleteUser",
        "description": "How to delete user",
        "parameters": [
          {
            "name": "action_token",
            "in": "header",
            "description": "This is `action_token` of user",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "This is `id` of user",
            "default": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "617921aa31e95274fda0887d",
                    "description": "MongoDB ID"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "Yana"
                  },
                  "age": {
                    "type": "number",
                    "example": 18
                  },
                  "role": {
                    "type": "string",
                    "example": "user"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError401"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError404"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "login",
        "description": "How to login",
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "default": "example@gmail.com",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "default": "12345678Example",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Login was successful",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError400"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "operationId": "logout",
        "description": "How to logout",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "default": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzU0OTU2NDIsImV4cCI6MTYzNTQ5NjU0Mn0.P7WMmHEFemicd_z6430RDMSEab-TpmPEKSI7YydGNaU",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout was successful",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "object",
                  "example": "Goodbye"
                },
                "code": {
                  "type": "number",
                  "example": 200
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError401"
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "operationId": "refreshToken",
        "description": "How to refresh token",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "default": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzU0OTU2NDIsImV4cCI6MTYzODA4NzY0Mn0.oA6nbvs88BynVoCgj0EVyA3j3eD4Z6IVdGqYg3RnqUQ",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token is refreshed",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "object",
                  "example": "OK"
                },
                "code": {
                  "type": "number",
                  "example": 200
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError401"
            }
          }
        }
        }
      },
    "/auth/password/forgot": {
      "post": {
        "tags": ["Password"],
        "operationId": "passwordForgotFind",
        "description": "Find user by email if password is forgotten",
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "default": "example@gmail.com",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User by email was found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "object",
                  "example": "OK"
                },
                "code": {
                  "type": "number",
                  "example": 200
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError400"
            }
          }
        }
      },
      "put": {
        "tags": ["Password"],
        "operationId": "passwordForgotChange",
        "description": "Change password",
        "parameters": [
          {
            "name": "newPassword",
            "in": "formData",
            "required": true,
            "default": "12345678Example",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Password is changed",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "object",
                  "example": "OK"
                },
                "code": {
                  "type": "number",
                  "example": 200
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/commonError400"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "singleUser": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "617921aa31e95274fda0887d",
          "description": "MongoDB ID"
        },
        "email": {
          "type": "string",
          "example": "example@gmail.com"
        },
        "name": {
          "type": "string",
          "example": "Yana"
        },
        "age": {
          "type": "number",
          "example": 18
        },
        "role": {
          "type": "string",
          "example": "user"
        }
      }
    },
    "commonError400": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "object",
          "example": "Wrong email or password"
        },
        "code": {
          "type": "number",
          "example": 400
        }
      }
    },
    "commonError401": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "object",
          "example": "Invalid token"
        },
        "code": {
          "type": "number",
          "example": 401
        }
      }
    },
    "commonError404": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "object",
          "example": "User with this id does not exist"
        },
        "code": {
          "type": "number",
          "example": 404
        }
      }
    }
  }
}
